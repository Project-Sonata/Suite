plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://artifactory-oss.prod.netflix.net/artifactory/maven-oss-candidates')
    }

    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api libs.org.projectlombok.lombok
    annotationProcessor libs.org.projectlombok.lombok
    api libs.org.springframework.hateoas.spring.hateoas
    api libs.com.fasterxml.jackson.core.jackson.core
    api libs.com.fasterxml.jackson.core.jackson.databind
    api libs.org.springframework.boot.spring.boot.autoconfigure
    api libs.org.jetbrains.annotations
    runtimeOnly libs.org.springframework.boot.spring.boot.devtools
    testImplementation libs.org.springframework.boot.spring.boot.starter.test
}

group = 'com.odeyalo.sonata' as String
version = '1.0.1'
description = 'Suite'

tasks.named('test') {
    useJUnitPlatform()

    testLogging {
        exceptionFormat "full"
        showStandardStreams true
    }
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Project-Sonata/Suite")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GH_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("ACCESS_TOKEN")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            groupId this.group
            artifactId 'suite'
            version this.version

            from components.java
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
